{ "name": "VB.NET",
  "scopeName": "source.vbnet", 
  "fileTypes": ["vb"], 
  "patterns": [
  	{ "include": "#singleLineComment" },
  	{ "include": "#namespaceDefinition" },
  	{ "include": "#classDefinition" },
	{ "include": "#functionDefinition" },
	{ "include": "#functionDefinitionEnd" },
	{ "include": "#controlKeywords" },
	{ "include": "#otherKeywords" },
	{ "include": "#variable" },
	{ "include": "#simpleVariable" },
	{ "include": "#languageVariable" },
	{ "include": "#operator" },
	{ "include": "#languageContants" },
	{ "include": "#numericConstant" },
	{ "include": "#quotedString" }
  ],
  "repository": {
  	"simpleVariable":{
  		"name": "meta.variable",
	    "match": "^\\s*((?i:dim|public|private|protected|friend))\\s+([a-zA-Z_]\\w*)\\s+((?i:as))\\s*([a-zA-Z_]\\w*)\\.*",
	    "captures": {
	       "1": { "name": "storage.modifier.vbnet" },
	       "2": { "name": "entity.name.vbnet" },
	       "3": { "name": "keyword.other.vbnet" },
	       "4": { "name": "storage.type.vbnet"}
	   }
  	},
	"variable":{
  		"name": "meta.variable",
	    "match": "^\\s*((?i:dim|public|private|protected|friend))\\s+([a-zA-Z_]\\w*)\\s+((?i:as))\\s*((?i:new))\\s+([a-zA-Z_]\\w*)((\\()([^)]*)(\\)))?",
	    "captures": {
	       "1": { "name": "storage.modifier.vbnet" },
	       "2": { "name": "variable.vbnet" },
	       "3": { "name": "keyword.other.vbnet" },
	       "4": { "name": "support.function.vbnet" }, 
	       "5": { "name": "storage.type.vbnet"},
	       "6": { "name": "meta.parameters.vbnet"},
	       "7": { "name": "punctuation.definition.parameters.vbnet" },
		   "8": { "name": "variable.function.vbnet" },
		   "9": { "name": "punctuation.definition.parameters.vbnet" }
	   }
  	},
  	"singleLineComment": {
		"name": "comment.line.singlequote.vbnet",
		"match": "'.*$",
		"comment": "single quote comment"
	},
	"functionDefinition": {
		"name": "meta.function.vbnet",
		"begin": "^\\s*((?i:public|protected|private|friend))?\\s*((?i:function|sub))\\s*([a-zA-Z_]\\w*)\\s*(\\()",
		"beginCaptures": {
			"1": { "name": "storage.modifier.function.vbnet" },
		    "2": { "name": "storage.type.function.vbnet" },
		    "3": { "name": "entity.name.function.vbnet" },
		    "4": { "name": "meta.parameters.vbnet"},
		    "5": { "name": "punctuation.definition.parameters.vbnet" }
		},
		"patterns": [
			{
 				"name": "meta.parameters.vbnet",
			    "match": "((?i:optional))?\\s*((?i:byval|byref))?\\s*([a-zA-Z_]\\w*)\\s*((?i:as))\\s*([a-zA-Z_]\\w*)",
			    "captures": {
			    	"1": { "name": "keyword.other.vbnet" },
			        "2": { "name": "keyword.other.vbnet" },
			        "3": { "name": "variable.parameter.vbnet" },
			        "4": { "name": "keyword.other.vbnet" },
			        "5": { "name": "storage.type.vbnet" }
			    }
			}
		],
		"end": "(\\))\\s*(((?i:as))\\s([a-zA-Z_]\\w*))?",
		"endCaptures": {
		    "1": { "name": "punctuation.definition.parameters.vbnet" },
		    "2": { "name": "meta.function.return-type.vbnet" },
		    "3": { "name": "keyword.other.vbnet" },
		    "4": { "name": "storage.type.vbnet" }
		}
	},
	"functionDefinitionEnd":{
	   "match": "^((?i:end)){1}\\s*((?i:function|sub)){1}",
	   "captures": {
			"1": {"name": "keyword.control.vbnet"},
			"2": {"name": "storage.type.function.vbnet"}
	   }
	},
	"classDefinition":{
		"name": "meta.class.vbnet",
		"begin": "^((?i:public|private|protected|friend))?\\s*((?i:class))\\s*([a-zA-Z_]\\w*)\\s*",
		"beginCaptures": {
			"1": { "name": "storage.modifier.class.vbnet" },
			"2": { "name": "storage.type.class.vbnet" },
			"3": { "name": "entity.name.type.vbnet" }
		},
		"patterns": [
			{ "include": "$self" }
		],
		"end": "^((?i:end))\\s*((?i:class))",
		"endCaptures": {
			"1": { "name": "storage.modifier.class.vbnet" },
			"2": { "name": "storage.type.class.vbnet" }
		}
	},
	"namespaceDefinition":{
		"name": "meta.class.vbnet",
		"begin": "^((?i:namespace))\\s*([a-zA-Z_]\\w*)\\s*",
		"beginCaptures": {
			"1": { "name": "storage.modifier.namespace.vbnet" },
			"3": { "name": "entity.name.type.vbnet" }
		},
		"patterns": [
			{ "include": "$self" }
		],
		"end": "^((?i:end))\\s*((?i:namespace))",
		"endCaptures": {
			"1": { "name": "storage.modifier.namespace.vbnet" },
			"2": { "name": "storage.type.namespace.vbnet" }
		}
	},
	"controlKeywords":{
		"name": "keyword.control.vbnet",
		"match": "(?i:\\b(If|Then|Else|ElseIf|Else If|End If|While|End While|For|To|Each|Case|Select|End Select|Return|Continue|Do|Until|Loop|Next|With|Exit Do|Exit For|Exit Function|Exit Property|Exit Sub|IIf|Step)\\b)"		
	},
	"otherKeywords":{
		"name": "keyword.other.vbnet",
		"match": "(?i:As)"
	},
	"operator":{
		"match": "((?i:mod|\\.|\\+|\\*|\\\\|/|=|-|<|<=|>|>=|not))",
		"name": "language.operator.vbnet"
	},
	"languageVariable":{
		"match": "((?i:Me|MyBase))\\.",
		"name": "keyword.other.vbnet"
	},
	"languageContants":{
		"match": "((?i:true|false|nothing))",
		"name": "constant.language.vbnet"
	},
	"numericConstant": {
		"match": "([^a-zA-Z_]\\d+)",
		"name": "constant.numeric.vbnet"
	},
	"quotedString": {
		"begin": "(\")",
	 	"beginCaptures":{
	 		"1": { "name": "punctuation.definition.string.vbnet"}
	 	},
	 	"patterns": [
		 	{  "name": "string.quoted.double.vbnet",
		 	   "match": "([^\"]|\"\")*"
		 	}
	 	],
	  	"end": "(\")",
	  	"endCaptures": {
	  		"1": { "name": "punctuation.definition.string.vbnet"}
	  	}
    }
  },
  "uuid": "975d5447-0eb5-444c-a471-5934193ca1ea"
}